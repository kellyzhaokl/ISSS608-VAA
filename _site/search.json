[
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html",
    "title": "Take-home_Ex03",
    "section": "",
    "text": "According to an office report as shown in the infographic below, there are some insights about climate change in Singapore."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#overview",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#overview",
    "title": "Take-home_Ex03",
    "section": "",
    "text": "According to an office report as shown in the infographic below, there are some insights about climate change in Singapore."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#objective",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#objective",
    "title": "Take-home_Ex03",
    "section": "2 Objective",
    "text": "2 Objective\nAs for the rainfall insights above, I will apply appropriate interactive techniques to enhance the user experience in data discovery and visual story-telling to see the contrast between the wet months (November to January) and dry months (February and June to September) ."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#data-preparation",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#data-preparation",
    "title": "Take-home_Ex03",
    "section": "3 Data preparation",
    "text": "3 Data preparation\n\n3.1 Loading R packages\n\n\nCode\npacman::p_load(tidyverse,haven,dplyr,tidyr,ggplot2,plotly,patchwork,ggthemes,gganimate,readr,ggridges,ggdist)\n\n\n\n\n3.2 Import Data\nThe data set is downloaded from Meteorological Service Singapore website. I chose rainfall records of Changi station for August (dry month) and December (wet month) of the years 1983, 1993, 2003, 2013, and 2023 to see the distribution and trends.\nAs we just focused on the rainfall distribution, so i only chose four columns: Year, Month, Day, and Daily Rainfall Total (mm).\n\n3.2.1 Combine August Data\n\n\nCode\n# List of file paths\nAug_paths &lt;- c(\"data/DAILYDATA_S24_198308.csv\", \"data/DAILYDATA_S24_199308.csv\", \n                \"data/DAILYDATA_S24_200308.csv\", \"data/DAILYDATA_S24_201308.csv\", \n                \"data/DAILYDATA_S24_202308.csv\")\n\n# Read and combine all files into one data frame\ncombined_Aug &lt;- Aug_paths %&gt;%\n  lapply(read_csv, locale = locale(encoding = \"latin1\")) %&gt;%\n  bind_rows() %&gt;%\n  select(Year, Month, Day, `Daily Rainfall Total (mm)`)\n\ncombined_Aug &lt;- combined_Aug %&gt;%\n  mutate(Month = \"August\")\n\n# Display the combined dataset\nhead(combined_Aug)\n\n\n# A tibble: 6 × 4\n   Year Month    Day `Daily Rainfall Total (mm)`\n  &lt;dbl&gt; &lt;chr&gt;  &lt;dbl&gt;                       &lt;dbl&gt;\n1  1983 August     1                         0  \n2  1983 August     2                         6.4\n3  1983 August     3                         2.8\n4  1983 August     4                         3.7\n5  1983 August     5                        18.7\n6  1983 August     6                         0  \n\n\n\n\n3.2.2 Combine December Data\n\n\nCode\n# December data\nDec_paths &lt;- c(\"data/DAILYDATA_S24_198312.csv\", \"data/DAILYDATA_S24_199312.csv\", \n                \"data/DAILYDATA_S24_200312.csv\", \"data/DAILYDATA_S24_201312.csv\", \n                \"data/DAILYDATA_S24_202312.csv\")\n\n# Read and combine all files into one data frame\ncombined_Dec &lt;- Dec_paths %&gt;%\n  lapply(read_csv, locale = locale(encoding = \"latin1\")) %&gt;%\n  bind_rows() %&gt;%\n  select(Year, Month, Day, `Daily Rainfall Total (mm)`)\n\ncombined_Dec &lt;- combined_Dec %&gt;%\n  mutate(Month = \"December\")\n\n# Display the combined dataset\nhead(combined_Dec)\n\n\n# A tibble: 6 × 4\n   Year Month      Day `Daily Rainfall Total (mm)`\n  &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt;                       &lt;dbl&gt;\n1  1983 December     1                         2.8\n2  1983 December     2                         1.7\n3  1983 December     3                         5  \n4  1983 December     4                         8.2\n5  1983 December     5                         0  \n6  1983 December     6                         0"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#data-visualization",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#data-visualization",
    "title": "Take-home_Ex03",
    "section": "4 Data visualization",
    "text": "4 Data visualization\n\n4.1 Rainfall distribution between dry and wet months\nAs we need to compare if there is any difference between August and December, we could use the mean value of each year for different months to see if there is any difference. We can also compare the distribution in large rainfall values to see if there is any chance that certain month has much more proportion. Thus, I chose to use a jitter plot to see the data.\n\n\nCode\ncombined_data &lt;- rbind(combined_Aug, combined_Dec)\n\n# Calculate the mean rainfall for each year and month\nmean_rainfall &lt;- combined_data %&gt;%\n  group_by(Year, Month) %&gt;%\n  summarize(Mean = mean(`Daily Rainfall Total (mm)`, na.rm = TRUE)) %&gt;%\n  ungroup()\n\n# Create a ggplot object with jitter, mean points and lines for each month\nggplot_object &lt;- ggplot(combined_data, aes(x = as.factor(Year), y = `Daily Rainfall Total (mm)`)) +\n  geom_jitter(aes(color = Month), width = 0.2, height = 0, size = 2,alpha = 0.6) +\n  geom_point(data = mean_rainfall, aes(y = Mean, color = Month), size = 3, shape = 18) +\n  geom_line(data = mean_rainfall, aes(y = Mean, color = Month, group = Month), size = 0.3, linetype = \"dotted\") +\n  scale_color_manual(values = c(\"August\" = \"red\", \"December\" = \"blue\")) +\n  labs(title = \"Changi: Daily Rainfall (1983-2023)\",\n       x = \"Year\",\n       y = \"Daily Rainfall Total (mm)\",\n       color = \"Month\") +\n  theme_minimal() +\n  theme(legend.position = \"bottom\")\n\n# Adjusting y-axis to increment by 25\nggplot_object &lt;- ggplot_object +\n  scale_y_continuous(breaks = seq(0, max(combined_data$`Daily Rainfall Total (mm)`), by = 25))\n\n# Convert the ggplot object to a plotly object for interactivity\nplotly_object &lt;- ggplotly(ggplot_object)\n\n# Display the plot\nplotly_object\n\n\n\n\n\n\n\n\n\n\n\n\nInsight\n\n\n\nFrom the scatter plot, two primary insights can be drawn regarding rainfall patterns for August and December. First, the mean rainfall in December appears to be higher than in August, indicated by the average position of December’s data points being higher on the y-axis. Second, when observing rainfall events exceeding 25mm, the majority are represented by December’s data points, suggesting that heavy rainfall is more prevalent in December than in August. Overall, the data suggests that December experiences a greater quantity of rainfall compared to August.\nWe also noticed that most of the value is distributed around 0, which is slightly ambiguous. We can calculate the number of rain days to see the difference between dry and wet months.\n\n\n\n\n4.2 Further insight about the rainy days\nWe can derive the number of rainy day to see if the discrepancy is larger by year.\n\n\nCode\n# Calculate the number of rainy days per year for each month\nRainfall_Days &lt;- combined_data %&gt;%\n  group_by(Year, Month) %&gt;%\n  summarize(Rainy_Days = sum(`Daily Rainfall Total (mm)` &gt; 0, na.rm = TRUE)) %&gt;%\n  ungroup()\n\n# Create a ggplot object with lines and points for each month\nggplot_object &lt;- ggplot(Rainfall_Days, aes(x = Year, y = Rainy_Days, group = Month, color = Month)) +\n  geom_line() +\n  geom_point() +\n  scale_color_manual(values = c(\"August\" = \"pink\", \"December\" = \"lightblue\")) + # Set the line colors manually\n  labs(title = \"The Discrepancy Of Rainydays Trends by year\",\n       x = \"Year\",\n       y = \"Rainy Days\",\n       color = \"Month\") +\n  theme_minimal() +\n  theme(legend.position = \"bottom\") # Change to \"bottom\" to show the legend\n\n# Convert the ggplot object to a plotly object for interactivity\nplotly_object &lt;- ggplotly(ggplot_object, tooltip = c(\"y\", \"color\")) # Specify which data to show in the tooltip\n\n# Display the interactive plot\nplotly_object\n\n\n\n\n\n\n\n\n\n\n\n\nInsight\n\n\n\nFrom the above plot, we can see that the difference is getting larger from 2003 to 2023, which indicates that the contrast between the wet month and dry month is likely to be more pronounced. Of course, we need more dataset to validate the insight in the future."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html",
    "title": "Take-home_Ex02",
    "section": "",
    "text": "In this Take-home Exercise 2, I have chosen one of my classmate’s Take-home Exercise 1 submission and analyzed the visualization in terms of clarity and aesthetics.\n\n\n\n\nCode\npacman::p_load(tidyverse, haven, knitr, kableExtra, intsvy, ggrepel, patchwork, \n               ggthemes, hrbrthemes, ggdist, ggridges, colorspace, gridExtra)\n\n\n\n\n\nAs we are focursed on Singapore database. So firstly we should filter Singapore dataset. Refer to In-class Exercise 1 for more details.\n\n\nCode\n# eval: false\nstu_qqq_SG &lt;-\n  read_rds(\"D:/kellyzhaokl/ISSS608-VAA/Take-home_Ex/Take-home_Ex01/data/stu_qqq_SG.rds\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#overview",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#overview",
    "title": "Take-home_Ex02",
    "section": "",
    "text": "In this Take-home Exercise 2, I have chosen one of my classmate’s Take-home Exercise 1 submission and analyzed the visualization in terms of clarity and aesthetics.\n\n\n\n\nCode\npacman::p_load(tidyverse, haven, knitr, kableExtra, intsvy, ggrepel, patchwork, \n               ggthemes, hrbrthemes, ggdist, ggridges, colorspace, gridExtra)\n\n\n\n\n\nAs we are focursed on Singapore database. So firstly we should filter Singapore dataset. Refer to In-class Exercise 1 for more details.\n\n\nCode\n# eval: false\nstu_qqq_SG &lt;-\n  read_rds(\"D:/kellyzhaokl/ISSS608-VAA/Take-home_Ex/Take-home_Ex01/data/stu_qqq_SG.rds\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#dataviz-makeover",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#dataviz-makeover",
    "title": "Take-home_Ex02",
    "section": "2 DataViz Makeover",
    "text": "2 DataViz Makeover\n\n2.1 Distribution of Mean Math/ Reading/Science Scores\n\n2.1.1 Original Version\nFor the original version, three histograms are used to display the distribution of students’ math, reading, and science score.\n\n\nClarityAesthetics\n\n\n\nDistinct Colours: The use of different colors (aquamarine, cornsilk, and darkolivegreen2) for each histogram makes it easy to differentiate between the three subjects.\nClear Titles: Each plot has a clear title that specifies the subject of the scores being displayed, which helps in understanding what each histogram represents.\nLack of Mean Indication: The mean of each distribution is not clearly indicated within the plot area, making it less straightforward for viewers to understand the key point of the data representation.\nOverlapping Axes Labels: The x-axis labels (meanmathscore, meanreadscore, meansciescore) are overlapping with the lower plot, which can make it hard to read.\nConsistent Axis Scales: While the histograms are likely meant to be compared, the y-axis scales differ between the three, which may mislead a viewer regarding the relative frequencies of score ranges.\n\n\n\n\nBorder and Fill Contrast: The black borders around the bars with different fill colors provide a good contrast, making individual bars stand out.\nSpacing Between Plots: The plots are tightly stacked, which may lead to a cluttered look, especially when viewed on smaller screens or from a distance.\n\n\n\n\n\n\n2.1.2 Final Design\nAfter performing necessary modifications, the final code and design are as follows:\n\n\nCode\nmeanmathscore = rowMeans(select(stu_qqq_SG, PV1MATH : PV10MATH))\nstu_qqq_SG$meanmathscore &lt;- meanmathscore\nh1 &lt;- ggplot(data = stu_qqq_SG, aes(x = meanmathscore)) +\n  geom_histogram(bins=20, boundary = 100, color=\"black\", fill=\"aquamarine\") + \n  geom_vline(aes(xintercept = mean(meanmathscore)), color = \"red\", linetype = \"dashed\") +\n  annotate(\"text\", x = mean(stu_qqq_SG$meanmathscore), y = Inf, label = paste(\"Mean:\", round(mean(stu_qqq_SG$meanmathscore), 2)), \n           vjust = 1, color = \"red\") +\n  coord_cartesian(xlim=c(150,850), ylim = c(0,1000)) +\n  labs(y = \"Count\", x=\"Average Maths Score\", subtitle = \"Maths\") +\n theme_economist()+\n  scale_x_continuous(breaks = seq(0, 850, by = 200)) # Adjust the breaks to include 20 if necessary\n\n\nmeanreadscore = rowMeans(select(stu_qqq_SG, PV1READ : PV10READ))\nstu_qqq_SG$meanreadscore = meanreadscore\nh2 &lt;- ggplot(data = stu_qqq_SG, \n             aes(x = meanreadscore)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"black\", \n                 fill=\"cornsilk\") + \n  geom_vline(aes(xintercept = mean(meanreadscore)), color = \"red\", linetype = \"dashed\") +\n  annotate(\"text\", x = mean(stu_qqq_SG$meanreadscore), y = Inf, \n           label = paste(\"Mean:\", round(mean(stu_qqq_SG$meanreadscore), 2)), \n           vjust = 1, color = \"red\") +\n  coord_cartesian(xlim=c(150,850)) +\n  theme_economist()+\n  labs(y = \"Count\", x=\"Average Read Score\", subtitle = \"Read\")+\n  coord_cartesian(ylim = c(0,1000))\n\nmeansciescore = rowMeans(select(stu_qqq_SG, PV1SCIE : PV10SCIE))\nstu_qqq_SG$meansciescore = meansciescore\nh3 &lt;- ggplot(data = stu_qqq_SG, \n             aes(x = meansciescore)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"black\", \n                 fill=\"darkolivegreen2\") + \n   geom_vline(aes(xintercept = mean(meansciescore)), color = \"red\", linetype = \"dashed\") +\n  annotate(\"text\", x = mean(stu_qqq_SG$meansciescore), y = Inf, \n           label = paste(\"Mean:\", round(mean(stu_qqq_SG$meansciescore), 2)), \n           vjust = 1, color = \"red\") +\n  coord_cartesian(xlim=c(150,850)) +\n theme_economist()+\n  labs(y = \"Count\", x=\"Average Science Score\", subtitle = \"Science\")+\n  coord_cartesian(ylim = c(0,1000))\n\nh1 + h2 + h3 +\n  plot_annotation(title = \"Distributions of Average of Maths/Read/Science\")\n\n\n\n\n\n\nClarityAesthetics\n\n\n\nComparison Across Subjects: Presenting the three subjects side by side enables a comparative view across different disciplines, which is beneficial for identifying patterns and differences in score distributions.\nOverplotting: There appears to be significant overplotting, with many lines overlapping, making it difficult to distinguish individual distributions.\n\n\n\narrange the histograms horizontally in a single row: By arranging the histograms side by side, viewers can easily compare the distributions of scores in Maths, Reading, and Science.\n\n\n\n\n\n\n2.2 Relationship between Performances with Schools\n\n2.2.1 Original Version\n\n\nClarityAesthetics\n\n\n\nDistinct Colours: The use of different colors (aquamarine, cornsilk, and darkolivegreen2) for each histogram makes it easy to differentiate between the three subjects.\nOverplotting: There is a high degree of overplotting which affects the clarity of the data. The dense overlapping of lines creates visual clutter, making it hard to distinguish between different groups or to identify trends within individual groups.\n\n\n\nAlignment and Layout: Aligning the plots in a horizontal array allows for an easy comparison across the different subjects. This layout is effective for side-by-side analysis without needing to scroll or switch between different visualizations.\n\n\n\n\n\n2.2.2 Final Design\nAfter performing necessary modifications, the final code and design are as follows:\n\n\nCode\nstu_qqq_SG &lt;- stu_qqq_SG %&gt;%\n  mutate(\n    Math = rowMeans(select(., starts_with(\"PV1MATH\"), ends_with(\"PV10MATH\")), na.rm = TRUE),\n    Reading = rowMeans(select(., starts_with(\"PV1READ\"), ends_with(\"PV10READ\")), na.rm = TRUE),\n    Science = rowMeans(select(., starts_with(\"PV1SCIE\"), ends_with(\"PV10SCIE\")), na.rm = TRUE)\n  )\n\nnew_data &lt;- select(stu_qqq_SG,CNTSTUID,CNTSCHID,ST004D01T, ESCS, Math, Reading, Science)\n\n# Calculate the average scores for each school and subject\nschool_averages &lt;- stu_qqq_SG %&gt;%\n  group_by(CNTSCHID) %&gt;%\n  summarize(\n    Math = mean(Math, na.rm = TRUE),\n    Reading = mean(Reading, na.rm = TRUE),\n    Science = mean(Science, na.rm = TRUE),\n    .groups = 'drop'\n  )\n\n# Reshape the data to a long format for plotting\nschool_averages_long &lt;- school_averages %&gt;%\n  pivot_longer(\n    cols = c(Math, Reading, Science),\n    names_to = \"Subject\",\n    values_to = \"Average_Score\"\n  )\n\n# Select the top 2 and bottom 2 schools for each subject\ntop_schools &lt;- school_averages_long %&gt;%\n  group_by(Subject) %&gt;%\n  slice_max(order_by = Average_Score, n = 2) %&gt;%\n  ungroup()\n\nbottom_schools &lt;- school_averages_long %&gt;%\n  group_by(Subject) %&gt;%\n  slice_min(order_by = Average_Score, n = 2) %&gt;%\n  ungroup()\n\n# Create the scatter plot\np &lt;- ggplot(school_averages_long, aes(x = Subject, y = Average_Score)) +\n  geom_point(aes(color = CNTSCHID), position = position_jitterdodge(jitter.width = 0.6)) +\n  labs(title = \"Relationship between Performances with Schools\") +\n  theme_minimal()\n\n# Add labels for the top 2 and bottom 2 schools\np + geom_label_repel(\n      data = top_schools, \n      aes(label = CNTSCHID), \n      nudge_y = 6, # Adjust this value based on your plot's scale\n      direction = \"y\",\n      color = \"blue\",\n      size = 3,\n      segment.size = 0.2,\n      segment.color = \"blue\") +\n    geom_label_repel(\n      data = bottom_schools, \n      aes(label = CNTSCHID), \n      nudge_y = -8, # Adjust this value based on your plot's scale\n      direction = \"y\",\n      color = \"red\",\n      size = 3,\n      segment.size = 0.2,\n      segment.color = \"red\") +\n    theme(legend.position = \"right\") # Remove legend for cleaner plot\n\n\n\n\n\n\nClarityAesthetics\n\n\n\nClean Layout: The plot has a clean and uncluttered layout with a minimalist design that keeps the focus on the data. The background is free of unnecessary elements, which minimizes distractions and allows for the data and labels to stand out clearly.\nTop2 And Bottom 2 Contrast: The use of contrasting colors (red for the bottom schools and blue for the top schools) is aesthetically pleasing and functionally effective. It immediately draws attention to the performance extremes without overwhelming the viewer with too much color differentiation.\n\n\n\nBalanced Color Usage: The restrained use of color for labeling purposes ensures that the plot is not visually overwhelming, maintaining a balance that is pleasing to the eye and enhances readability.\n\n\n\n\n\n\n2.3 Relationship between Performances with Gender\n\n2.3.1 Original Version\n\n\nClarityAesthetics\n\n\nDensity Plots: Using density plots provides a quite clear display about the distribution of the data.\n\n\nColor Harmony: The choice of different colors creates a visually harmonious color scheme that complements the overall design.\n\n\n\n\n\n2.3.2 Final Design\nAfter performing necessary modifications, the final code and design are as follows:\n\n\nCode\nstu_qqq_SG_final &lt;- stu_qqq_SG %&gt;%\n  mutate(GENDER = recode(ST004D01T,\n                         `1` = \"Female\",\n                         `2` = \"Male\"))\n\np1 &lt;- ggplot(data=stu_qqq_SG_final, \n       aes(x = meanmathscore,\n           color=GENDER,\n           fill=GENDER)) +\n  geom_density(linewidth = 0.08, alpha=0.8,color=\"gray\")+\n  scale_fill_manual(values = c(\"#00FFFF\", \"#FFFF99\")) +\n  scale_y_continuous(labels = scales::percent) +\n  scale_x_continuous(limits = c(100, 900)) +\n    theme_minimal() +\n  theme(text = element_text(size = 8), plot.title = element_text(hjust = 0.5))\n\np2 &lt;- ggplot(data=stu_qqq_SG_final, \n       aes(x = meanreadscore,\n           color=GENDER,\n           fill=GENDER)) +\n  geom_density(linewidth = 0.08, alpha=0.8,color=\"gray\")+\n  scale_fill_manual(values = c(\"#00FFFF\", \"#FFFF99\")) +\n  scale_y_continuous(labels = scales::percent) +\n  scale_x_continuous(limits = c(100, 900)) +\n    theme_minimal() +\n  theme(text = element_text(size = 8), plot.title = element_text(hjust = 0.5))\n\np3 &lt;- ggplot(data=stu_qqq_SG_final, \n       aes(x = meansciescore,\n           color=GENDER,\n           fill=GENDER)) +\n  geom_density(linewidth = 0.08, alpha=0.8,color=\"gray\")+\n  scale_fill_manual(values = c(\"#00FFFF\", \"#FFFF99\")) +\n  scale_y_continuous(labels = scales::percent) +\n  scale_x_continuous(limits = c(100, 900)) +\n    theme_minimal() +\n  theme(text = element_text(size = 8), plot.title = element_text(hjust = 0.5))\n(p1/p2/p3)\n\n\n\n\n\n\nClarityAesthetics\n\n\n\nCombining female and male scores on the same plot allows for direct comparison between genders, making it easier to observe differences and similarities in score distributions.\nThe use of different colors for each gender (blue for female and yellow for male) helps in quickly distinguishing between the two groups.\n\n\n\n1.The color scheme is pleasant, with soft shades that make the graph visually appealing and easy to look at for longer periods without causing strain.\n2.The layout is clean and uncluttered, with a clear demarcation between the different plots, which improves readability and overall visual appeal.\n\n\n\n\n\n\n2.4 Original Relationship between Performances with Socio Economic Status\n\n2.4.1 Original Version\n\n\nClarityAesthetics\n\n\n\nThe inclusion of a line of best fit on each plot provides a clear visual indication of the trend or relationship between socioeconomic status and the mean scores for each subject, which helps in interpreting the data.\nThe current continuous scatter could obscure subtle changes in score distributions within specific socioeconomic strata, which binning could help to highlight.\n\n\n\nColor Harmony: The choice of different colors creates a visually harmonious color scheme that complements the overall design.\n\n\n\n\n\n2.4.2 Final Design\nAfter performing necessary modifications, the final code and design are as follows:\n\n\nCode\n# Filter out rows with NA values in ESCS\nnew_data &lt;- new_data[!is.na(new_data$ESCS),]\n\nlong_data &lt;- pivot_longer(new_data, \n                          cols = c(\"Math\", \"Reading\", \"Science\"),\n                          names_to = \"subject\", \n                          values_to = \"score\")\n# Convert ESCS column to numeric\nlong_data$ESCS &lt;- as.numeric(long_data$ESCS)\n\n# Define breaks and labels\nbreaks &lt;- c(-4, -2, 0, 2, 4)\nlabels &lt;- c(\"Low\", \"Low Medium\", \"Medium\", \"Top\")\n\n# Use cut with the numeric ESCS column\nbins &lt;- cut(long_data$ESCS, breaks = breaks, labels = labels, include.lowest = TRUE)\n\nlong_data &lt;- long_data %&gt;%\n  mutate(ESCS = bins)\n\nggplot(long_data, \n       aes(y = score, x = ESCS, fill = ESCS)) +\n  geom_boxplot() +\n  scale_fill_viridis_d() +  # Use viridis color palette\n  facet_wrap(~ subject) +\n  labs(y = \"Score\", \n       title = \"Relationship between Performances with Socio Economic Status\") +\n  theme_minimal() +\n  theme(text = element_text(size = 10),  # Adjust text size\n        plot.title = element_text(hjust = 0.5),\n        axis.title.x = element_blank(),  # Remove x-axis title\n        axis.text.x = element_text(size = 8, angle = 90, vjust = 1)) +  # Adjust the x-axis label size, angle, and vertical adjustment\n  theme(legend.position = \"none\")\n\n\n\n\n\n\nClarityAesthetics\n\n\n\nBinning the socio-economic status into clear categories (‘Low’, ‘Low Medium’, ‘Medium’, ‘Top’) simplifies the interpretation of the data by reducing complexity and allowing for easy comparison between distinct socio-economic groups.\nThe boxplot representation provides a concise summary of the distribution of scores within each socio-economic category, highlighting median values and variability, which makes it easier to discern the central tendency and spread of scores.\n\n\n\n\nThe use of color coding for different socio-economic categories in the boxplot enhances visual differentiation, making it easier for viewers to quickly associate each box with its corresponding socio-economic level.\nThe consistent layout across the three subjects (Math, Reading, Science) and the alignment of categories across the facets maintain a uniform look, which is pleasing to the eye and aids in comparing across subjects without the distraction of differing formats or scales."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#learning-point",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#learning-point",
    "title": "Take-home_Ex02",
    "section": "3 Learning Point",
    "text": "3 Learning Point\nBy reviewing my classmates’ work, I’ve learned the importance of variety in data visualization.\nFor instance, I’ve observed that complex numerical data can become more accessible when first categorized and then depicted using an appropriate plot type. This step of classification allows for a cleaner and more organized presentation, making it easier for the audience to digest the information.\nFurthermore, I’ve realized that the impact of a visualization is often in the details. The same chart can be transformed from a simple illustration to a compelling narrative with the strategic use of colors, adjusted titles, and the inclusion of helpful annotations like auxiliary lines. These seemingly minor tweaks can significantly enhance the visualization’s ability to engage and inform."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "title": "Take-home_Ex01",
    "section": "",
    "text": "Despite official claims of educational equity in Singapore, public perception highlights persistent disparities based on socioeconomic status, school type, and family background."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#overview",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#overview",
    "title": "Take-home_Ex01",
    "section": "",
    "text": "Despite official claims of educational equity in Singapore, public perception highlights persistent disparities based on socioeconomic status, school type, and family background."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#objective",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#objective",
    "title": "Take-home_Ex01",
    "section": "2.OBJECTIVE",
    "text": "2.OBJECTIVE\nUsing appropriate Exploratory Data Analysis (EDA) methods and ggplot2 functions to get insight.\n\nThe distribution of Singapore students’ performance in mathematics, reading, and science.\nThe relationship between these performances with schools, gender and socioeconomic status of the students."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-preparation",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-preparation",
    "title": "Take-home_Ex01",
    "section": "3.DATA PREPARATION",
    "text": "3.DATA PREPARATION\n\n3.1 Loading R packages\n\n\nCode\npacman::p_load(tidyverse,haven,dplyr,tidyr,ggplot2,patchwork,ggthemes)\n\n\n\n\n3.2 Data set\nAs we are focursed on Singapore database. So firstly we should filter Singapore dataset. Refer to In-class Exercise 1 for more details.\n\n\nCode\n# eval: false\nstu_qqq_SG &lt;-\n  read_rds(\"data/stu_qqq_SG.rds\")\n\n\n\n\n3.3 Data Preparation\n\n1.Find the relative math score data in ‘stu_qqq_SG’ dataset\n\n\nCode\n# eval: false\n# Select the specific columns and view the first few rows\nhead(select(stu_qqq_SG, PV1MATH, PV2MATH, PV3MATH, PV4MATH, PV5MATH, PV6MATH, PV7MATH, PV8MATH, PV9MATH, PV10MATH))\n\n\n# A tibble: 6 × 10\n  PV1MATH PV2MATH PV3MATH PV4MATH PV5MATH PV6MATH PV7MATH PV8MATH PV9MATH\n    &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;\n1    639.    601.    621.    632.    579.    592.    601.    587.    618.\n2    697.    754.    672.    657.    621.    656.    748.    694.    743.\n3    694.    654.    697.    646.    678.    644.    721.    671.    694.\n4    427.    410.    424.    389.    331.    380.    399.    422.    375.\n5    436.    453.    392.    440.    443.    453.    397.    460.    438.\n6    570.    540.    532.    534.    466.    529.    514.    521.    472.\n# ℹ 1 more variable: PV10MATH &lt;dbl&gt;\n\n\nSimilarly, we can find the reading and science score data and then get the average value for each course.\n\n\n2.Add new columns for math,reading and science\nCalculate the average score of the three courses separately.\n\n\nCode\nstu_qqq_SG &lt;- stu_qqq_SG %&gt;%\n  mutate(\n    Math = rowMeans(select(., starts_with(\"PV1MATH\"), ends_with(\"PV10MATH\")), na.rm = TRUE),\n    Reading = rowMeans(select(., starts_with(\"PV1READ\"), ends_with(\"PV10READ\")), na.rm = TRUE),\n    Science = rowMeans(select(., starts_with(\"PV1SCIE\"), ends_with(\"PV10SCIE\")), na.rm = TRUE)\n  )\n\n\n\n\n3.Create new clean table for later-on analysis\nSelect relative columns and create new_data with 7 columns and 6606 ids. Then see the total view of the data, where find that there are 47 missing values which can be considered deleted.\n\n\nCode\nnew_data &lt;- select(stu_qqq_SG,CNTSTUID,CNTSCHID,ST004D01T, ESCS, Math, Reading, Science)\nsummary(new_data)\n\n\n    CNTSTUID           CNTSCHID          ST004D01T          ESCS        \n Min.   :70200001   Min.   :70200001   Min.   :1.000   Min.   :-3.5488  \n 1st Qu.:70201836   1st Qu.:70200040   1st Qu.:1.000   1st Qu.:-0.2327  \n Median :70203674   Median :70200081   Median :2.000   Median : 0.4817  \n Mean   :70203673   Mean   :70200082   Mean   :1.508   Mean   : 0.2904  \n 3rd Qu.:70205513   3rd Qu.:70200123   3rd Qu.:2.000   3rd Qu.: 0.9036  \n Max.   :70207345   Max.   :70200165   Max.   :2.000   Max.   : 3.2780  \n                                                       NA's   :47       \n      Math          Reading         Science     \n Min.   :252.1   Min.   :141.2   Min.   :200.1  \n 1st Qu.:505.0   1st Qu.:478.1   1st Qu.:497.4  \n Median :583.0   Median :552.9   Median :569.3  \n Mean   :574.5   Mean   :543.6   Mean   :560.8  \n 3rd Qu.:648.0   3rd Qu.:617.5   3rd Qu.:630.0  \n Max.   :844.1   Max.   :813.8   Max.   :810.2  \n                                                \n\n\nCode\nnew_data &lt;- new_data %&gt;% filter(complete.cases(.))"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-analysis",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-analysis",
    "title": "Take-home_Ex01",
    "section": "4.DATA ANALYSIS",
    "text": "4.DATA ANALYSIS\n\n4.1 The distribution of Singapore students’ performance in each course\n\n\nCode\nlong_data &lt;- pivot_longer(new_data, \n                          cols = c(\"Math\", \"Reading\", \"Science\"),\n                          names_to = \"subject\", \n                          values_to = \"score\")\nggplot(long_data, aes(x = subject, y = score, fill = subject)) +\n  geom_boxplot() +  \n  scale_fill_manual(values = c(\"Math\" = \"magenta\", \"Reading\" = \"green\", \"Science\" = \"yellow\")) + # 为不同的科目设置颜色\n  stat_summary(fun = mean, geom = \"point\", shape = 20, size = 3, color = \"red\") +\n  \n  theme_minimal() +\n  labs(title = \"Distribution of Scores in Math, Reading, and Science\",\n       x = \"Subject\",\n       y = \"Average Score\") +\n  theme(plot.title = element_text(hjust = 0.5),\n        axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n\n\n⛳\nFrom the plot, we could see that for students performance in three subjects,math is the most highest among three courses, and the next up higher is science. Reading the lowest.\n\n\n4.2 Subject Performance by gender\n\n\nCode\nggplot(long_data, aes(x = subject, y = score, fill = factor(ST004D01T, labels = c(\"Female\", \"Male\")))) +\n  geom_boxplot(position = position_dodge(width = 0.8)) +\n  scale_fill_manual(values = c(\"Female\" = \"pink\", \"Male\" = \"blue\")) +\n  labs(title = \"Performance Distribution by Subject and Gender\",\n       x = \"Subject\",\n       y = \"Score\",\n       fill = \"Gender\") +\n  theme_minimal() +\n  theme(legend.title = element_text(hjust = 0.5),\n        axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n\n\n⛳\nFrom the boxplot, we could see that male tends to get higher scores in math and science than female. Female tends to perform better in Reading.\n\n\n4.3 Subject Performance by different schools\n⛳\nFrom the plot, we could see that students in school 003 get highest score in math and science. Students in school 062 get the highest score in subject. However, students in school 149 perform the worst in all three courses.\n\n\nCode\n# Calculate the average scores for each school and subject\nschool_averages &lt;- new_data %&gt;%\n  group_by(CNTSCHID) %&gt;%\n  summarize(\n    Math = mean(Math, na.rm = TRUE),\n    Reading = mean(Reading, na.rm = TRUE),\n    Science = mean(Science, na.rm = TRUE),\n    .groups = 'drop'\n  )\n\n# Reshape the data to a long format for plotting\nschool_averages_long &lt;- school_averages %&gt;%\n  pivot_longer(\n    cols = c(Math, Reading, Science),\n    names_to = \"Subject\",\n    values_to = \"Average_Score\"\n  )\n\n# Find the top and bottom schools for each subject\ntop_schools &lt;- school_averages_long %&gt;%\n  group_by(Subject) %&gt;%\n  slice_max(Average_Score, n = 1) %&gt;%\n  ungroup()\n\nbottom_schools &lt;- school_averages_long %&gt;%\n  group_by(Subject) %&gt;%\n  slice_min(Average_Score, n = 1) %&gt;%\n  ungroup()\n\n# Create the scatter plot\nggplot(school_averages_long, aes(x = Subject, y = Average_Score)) +\n  geom_point(aes(color = CNTSCHID), position = position_jitterdodge()) +\n  labs(title = \"Subject Performance by Different Schools\",\n       x = \"Subject\", \n       y = \"Average Score\") +\n  theme_minimal() +\n  geom_text(data = top_schools, aes(label = CNTSCHID), vjust = 2, color = \"blue\") +\n  geom_text(data = bottom_schools, aes(label = CNTSCHID), vjust = 1, color = \"red\")\n\n\n\n\n\n\n\n4.4 Subject Performance by socioeconomic status\n\n\nCode\ntheme_setting &lt;- theme(\n  plot.title = element_text(size = 9),\n  plot.subtitle = element_text(size = 8),\n  plot.caption = element_text(size = 8),\n  axis.text.x = element_text(angle = 45, hjust = 1) # Adjust for better readability\n)\n\n# Adjust the alpha and size in geom_point for transparency and smaller points\np1 &lt;- ggplot(data=new_data, aes(x= ESCS, y=Math, color = \"Math\")) +\n  geom_point(alpha = 0.5, size = 1.5) +\n  geom_smooth(method=lm, linewidth=0.5) +  \n  coord_cartesian(xlim=c(-3,3), ylim=c(250,850)) +\n  ggtitle(\"Math vs. ESCS\") +  \n  theme_setting +\n  scale_color_manual(values = c(\"Math\" = \"magenta\"))\n\np2 &lt;- ggplot(data=new_data, aes(x= ESCS, y=Reading, color = \"Reading\")) +\n  geom_point(alpha = 0.5, size = 1.5) +\n  geom_smooth(method=lm, linewidth=0.5) +  \n  coord_cartesian(xlim=c(-3,3), ylim=c(250,850)) +\n  ggtitle(\"Reading vs. ESCS\") +\n  theme_setting +\n  scale_color_manual(values = c(\"Reading\" = \"green\"))\n\np3 &lt;- ggplot(data=new_data, aes(x= ESCS, y=Science, color = \"Science\")) +\n  geom_point(alpha = 0.5, size = 1.5) +\n  geom_smooth(method=lm, linewidth=0.5) +  \n  coord_cartesian(xlim=c(-3,3), ylim=c(250,850)) +\n  ggtitle(\"Science vs. ESCS\") +\n  theme_setting +\n  scale_color_manual(values = c(\"Science\" = \"yellow\"))\n\n\npatchwork &lt;- (p1 / p2) | p3\npatchwork & theme_economist()\n\n\n\n\n\n⛳\nFrom the plot, we could see that all three subjects—Math, Reading, and Science—show a positive correlation with the Economic, Social, and Cultural Status (ESCS) index. Most of the students are in the middle class."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#conclusion",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#conclusion",
    "title": "Take-home_Ex01",
    "section": "5.CONCLUSION",
    "text": "5.CONCLUSION\n\nStudents generally score better in Math compared to Reading. Girls typically excel in Reading but may not perform as well in Science. Boys often do better in Math and Science.\nSchool 003 leads with top scores in Math and Science, which may reflect its excellent programs in these fields. School 062 shines in Reading, hinting at a strong focus on literacy. Meanwhile, school 149 lags in all subjects, which could signal various difficulties at the school.\nHigher socioeconomic status is linked to better grades for students."
  }
]